



CRIANDO UM MODEL from
Herança de forms.ModelForm
rescreve a class Meta e indica qual Model deseja criar o formulário e '__all__' traz todos os campos da tabela e mostra no formulário.


#em forms.py
class CarModelForm(forms.ModelForm):
    class Meta:
        model = Car
        # Campos do formulário
        fields = '__all__' # Indica que quero no formulário todos os campos da minha tabela



#Em viwes
def new_car_view(request):
    if request.method == 'POST':
        new_car_form = CarModelForm(request.POST, request.FILES)# REQUEST.FILES PARA CASO A REQUISIÇÃO TRAGA IMAGENS
        
        if new_car_form.is_valid(): # valida os dados
            new_car_form.save() # metodo dentro do form
            return redirect('cars_list')
        else:
            pass
    else:
        new_car_form = CarModelForm()
    return render(request, 'new_car.html', {'new_car_form': new_car_form})


OBS: Funções de validação do Django sempre devem começar com "def clean_nome do campo"


List View ----------------------------------------------------
class CarsListView(ListView):

    model = Car # model que esta-rá sendo usado
    template_name = 'cars.html' # Faz a mesma função que o render, só precisa informar qual o template que será renderizado
    context_object_name = 'cars'

    def get_queryset(self):
        cars = super().get_queryset().order_by('model')
        search = self.request.GET.get('search')
        
        if search:
            cars = cars.filter(model__icontains=search)

        return cars


Create view ------------------------------------------------

class NewCarCreateView(CreateView):
    model = Car # Informar qual o model
    form_class = CarModelForm # De qual form virá os dados 
    template_name = 'new_car.html' # em qual template está localizado esse formulário
    success_url = '/cars_list/' # para qual URL será direcionado após o cadastro ter êxito

muda-se no em new_car.html
{% extends "base.html" %}

{% block content %}
    <form method="post" enctype="multipart/form-data" >
        {% csrf_token %} <!--csrf_token usar sempre que criar um formulário para segurança dos dados-->
        <table>
            {{ new_car_form.as_table }} -> para {{ form.as_table }} não precisa mais usar o:new_car_form.as_table
        </table>

        <input type="submit" value="Cadastrar" class="btn btn-primary" >
    </form>    
{% endblock %}
